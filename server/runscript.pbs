#!/bin/bash
#PBS -N pytest #--->> name you can give your simulation to locate in the queue later
#PBS -l nodes=1:ppn=4,walltime=1:20:00 #--->> specify the runtime in hh:mm:ss the lower the hours requested, the better chances that your run starts earlier
#PBS -A pythonsem
#PBS -q fpt-small
#PBS -M l.t.yap@student.tudelft.nl #---->> specify your email id ### Script for running multiple sequential Python scripts with GNU parallel (R. Dwight 2021-11)

### CHECK: Before each submission check the lines marked "(CHECK)"

# Dump starting environment data (will not be same as on master)
uname -n        # Name of node
export         # All envvars
pwd        # Working directory on start (should be ~)
which python    # Which Python is implied # Setup environment

source /home/litoongyap/cgans/venv39/bin/activate

which python                # Which Python is implied given new PATH
cd /home/litoongyap/cgans    # Directory must exist (CHECK)     ----------->>> go to the directory where the script is is
cores=4                     # Must correspond to ppn in header (CHECK)
jobs=1                     # Number of python jobs in total # Run code (using GNU parallel sem):
echo Starting $jobs Python jobs at: $(date) using $cores cores
# Assumes scripts "script_0001.py" to "script_$jobs.py" exist in "run0000" (CHECK) 
#for i in `seq --format='%01g' $jobs`; do

sem -j $cores "python3 WCGAN_aero-0.py > OUT/out_wcgan_aero-0.txt";
sem -j $cores "python3 WCGAN_aero-1.py > OUT/out_wcgan_aero-1.txt";
sem -j $cores "python3 WCGAN_aero-2.py > OUT/out_wcgan_aero-2.txt";
sem -j $cores "python3 WCGAN_aero-3.py > OUT/out_wcgan_aero-3.txt";
sem -j $cores "python3 WCGAN_aero-4.py > OUT/out_wcgan_aero-4.txt";
sem -j $cores "python3 WCGAN_aero-5.py > OUT/out_wcgan_aero-5.txt";

sem --wait; echo sem --wait done
# End
echo "Ending Python jobs at: "$(date)
