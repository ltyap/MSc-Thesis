#!/bin/bash
#PBS -N pytest  #--->> name you can give your simulation to locate in the queue later
#PBS -l nodes=1:ppn=4,walltime=03:20:00       #--->> specify the runtime in hh:mm:ss the lower the hours requested, the better chances that your run starts earlier
#PBS -A pythonsem
#PBS -q fpt-small
#PBS -M litoongyap@tudelft.nl #---->> specify your email id

### Script for running multiple sequential Python scripts with GNU parallel (R. Dwight 2021-11)
### CHECK: Before each submission check the lines marked "(CHECK)"

# Dump starting environment data (will not be same as on master)
uname -n        # Name of node
export         # All envvars
pwd        # Working directory on start (should be ~)
which python    # Which Python is implied

# Setup environment
source /home/litoongyap/cgan/venv39/bin/activate
which python                # Which Python is implied given new PATH
cd /home/litoongyap/cgan    # Directory must exist (CHECK)     ----------->>> go to the directory where the script is
cores=4                  # Must correspond to ppn in header (CHECK)
jobs=1                  # Number of python jobs in total

 

# Run code (using GNU parallel sem):
echo Starting $jobs Python jobs at: $(date) using $cores cores    

 

# Assumes scripts "script_0001.py" to "script_$jobs.py" exist in "run0000" (CHECK) 
# for i in `seq --format='%01g' $jobs`; do
# for i in 1; do
sem -j $cores "python3 WCGAN_implementation_aero_nd_1.py > out_wcgan_aero_nd_1.txt";
sem -j $cores "python3 WCGAN_implementation_aero_nd_2.py > out_wcgan_aero_nd_2.txt";
sem -j $cores "python3 WCGAN_implementation_aero_nd_3.py > out_wcgan_aero_nd_3.txt";
sem -j $cores "python3 WCGAN_implementation_aero_nd_5.py > out_wcgan_aero_nd_5.txt";
sem -j $cores "python3 WCGAN_implementation_aero_nd_8.py > out_wcgan_aero_nd_8.txt";
sem -j $cores "python3 WCGAN_implementation_aero_nd_10.py > out_wcgan_aero_nd_10.txt";
sem -j $cores "python3 WCGAN_implementation_aero_nd_20.py > out_wcgan_aero_nd_20.txt";
#        done 

# Wait until all the jobs are finished before existing script
sem --wait; echo sem --wait done

 

# End
echo "Ending Python jobs at: " $(date)
